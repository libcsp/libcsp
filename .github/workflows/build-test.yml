name: Build and Test
on: [push, pull_request]
jobs:
  run-tests:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
          - ubuntu-20.04
          #- macos-latest
        arch:
          - posix
        buildsystem:
          - meson
          - cmake
          - waf
        compiler:
          - CC: gcc
            CXX: g++
          - CC: clang
            CXX: clang++
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup packages on Linux
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt-get update
          sudo apt-get install libzmq3-dev libsocketcan-dev

      - name: Setup build system packages on Linux
        if: ${{ runner.os == 'Linux' && matrix.buildsystem != 'waf' }}
        run: |
          sudo apt-get install ninja-build ${{ matrix.buildsystem }}

      - name: Setup packages on MacOS
        if: ${{ runner.os == 'macOS' && matrix.buildsystem != 'waf' }}
        run: |
          brew update
          brew install ninja ${{ matrix.buildsystem }}
          brew install zeromq

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        env:
          CC: ${{ matrix.compiler.CC }}
          CXX: ${{ matrix.compiler.CXX }}
        run: python3 ./examples/buildall.py ${{ matrix.arch }} --build-system=${{ matrix.buildsystem }}

      - name: Run Loopback Test
        run: |
          ./build/examples/csp_arch
          ./build/examples/csp_server_client -t

      - name: Run ZMQ Client Test
        run: |
          ./build/examples/zmqproxy &
          ./build/examples/csp_server -z localhost -a 1 -t &
          ./build/examples/csp_client -z localhost -a 2 -C 1 -t
          pkill zmqproxy

      - name: Run ZMQ Server Test
        run: |
          ./build/examples/zmqproxy &
          ./build/examples/csp_client -z localhost -a 2 -C 1 -t &
          ./build/examples/csp_server -z localhost -a 1 -t
          pkill zmqproxy